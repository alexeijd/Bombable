<?xml version="1.0"?>

<PropertyList>

	<path>../../../../Aircraft/sopwithCamel-Bombable/Models/camel.ac</path>
	<texture-path>../../../../Aircraft/sopwithCamel-Bombable/Models/Textures</texture-path>

	<offsets>
		<x-m>0</x-m>
		<y-m>0</y-m>
		<z-m>0</z-m>
		<pitch-deg>0</pitch-deg>
	</offsets>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/clerget.xml</path>
		<offsets>
			<x-m>-0.70</x-m>
			<y-m>0.0</y-m>
			<z-m>-0.05</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/stick.xml</path>
		<offsets>
			<x-m>0.0900</x-m>
			<y-m>0.0</y-m>
			<z-m>-0.44</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/fuel_controls.xml</path>
		<offsets>
			<x-m>0</x-m>
			<y-m>0</y-m>
			<z-m>0</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/tacho.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>-0.1386</y-m>
			<z-m>0.3611</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/MkV30hrWatch.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0.1168</y-m>
			<z-m>0.2437</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/pulsometer.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>-0.2462</y-m>
			<z-m>0.2440</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/mag_switch_1.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>-0.1797</y-m>
			<z-m>0.2423</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/mag_switch_2.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>-0.1066</y-m>
			<z-m>0.2423</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/type259compass.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0</y-m>
			<z-m>0.425</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/elliot_clinometer.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0</y-m>
			<z-m>0.3325</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/markVAaltimeter.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0</y-m>
			<z-m>0.2648</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/asi.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0.1386</y-m>
			<z-m>0.3611</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/fakepanel.xml</path>
		<offsets>
			<x-m>-0.0775</x-m>
			<y-m>0</y-m>
			<z-m>0.04</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/fuel_pressure.xml</path>
		<offsets>
			<x-m>-0.0782</x-m>
			<y-m>0.2331</y-m>           
			<z-m>0.2868</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/vickers.xml</path>
		<offsets>
			<x-m>-0.2896</x-m>
			<y-m>-0.1426</y-m>
			<z-m>0.5130</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<model>
		<path>Aircraft/sopwithCamel-Bombable/Models/vickers.xml</path>
		<offsets>
			<x-m>-0.2896</x-m>
			<y-m>0.1426</y-m>
			<z-m>0.5130</z-m>
			<pitch-deg>0</pitch-deg>
		</offsets>
	</model>

	<!-- ********* shaders ****** -->

	<animation>
		<type>shader</type>
		<shader>chrome</shader>
		<texture>chrome2.rgb</texture>
		<object-name>cowl</object-name>
		<object-name>engine-air-intake</object-name>
	</animation>

	<!--
	<animation>
		<type>shader</type>
		<shader>chrome</shader>
		<texture>Textures/brass.rgb</texture>
		<object-name>switch_body</object-name>
		<object-name>knob</object-name>
	</animation>
	-->

	<animation>
		<type>shader</type>
		<shader>chrome</shader>
		<texture>chrome2.rgb</texture>
		<object-name>fuselage</object-name>
		<object-name>fuselage-cover-plate-P</object-name>
		<object-name>fuselage-cover-plate-S</object-name>
		<object-name>tube-upper</object-name>
		<object-name>tube-lower</object-name>
	</animation>

	<animation>
		<type>shader</type>
		<shader>chrome</shader>
		<texture>chrome2.rgb</texture>
		<object-name>glass</object-name>
	</animation>

	<!--	******* Rudder ****** -->

	<animation>
		<type>rotate</type>
		<object-name>rudder</object-name>
		<property>controls/flight/rudder</property>
		<factor>20.0</factor>
		<center>
			<x-m>4.0121</x-m>
			<y-m>0.000000</y-m>
			<z-m>0.600000</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>rudder-control-wire-S</object-name>
		<property>controls/flight/rudder</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>19.25</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>-20</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>4.0326</x-m>
			<y-m>0.1173</y-m>
			<z-m>-0.0353</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>rudder-control-wire-P</object-name>
		<property>controls/flight/rudder</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>20</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>-19.25</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>4.0326</x-m>
			<y-m>-0.1173</y-m>
			<z-m>-0.0353</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<!-- ****** Tail Skid ******* -->

	<animation>
		<type>rotate</type>
		<object-name>TailGear</object-name>
		<property>controls/flight/rudder</property>
		<factor>20.0</factor>
		<center>
			<x-m>3.9455</x-m>
			<y-m>0.000000</y-m>
			<z-m>-0.1645</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>tailskid-control-wire-P</object-name>
		<property>controls/flight/rudder</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>18</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>-20</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>3.9577</x-m>
			<y-m>0.0934</y-m>
			<z-m>-0.2524</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>tailskid-control-wire-S</object-name>
		<property>controls/flight/rudder</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>20</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>-18</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>3.9577</x-m>
			<y-m>-0.0934</y-m>
			<z-m>-0.2524</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>


	<!--  *** ailerons *** -->

	<animation>
		<type>rotate</type>
		<object-name>aileron-upper-stbd</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<axis>
			<x1-m>0.1823</x1-m>
			<y1-m>4.2191</y1-m>
			<z1-m>1.1002</z1-m>
			<x2-m>0.1823</x2-m>
			<y2-m>2.5244</y2-m>
			<z2-m>1.1020</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron-link-wire-stbd</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<center>
			<x-m>0.5658</x-m>
			<y-m>3.4198</y-m>
			<z-m>1.0165</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron_wire_top_S</object-name>
		<property>controls/flight/aileron</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-16.5</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>17.0</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>0.2424</x-m>
			<y-m>3.4172</y-m>
			<z-m>1.1373</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron-upper-port</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<axis>
			<x1-m>0.1823</x1-m>
			<y1-m>-4.2191</y1-m>
			<z1-m>1.1002</z1-m>
			<x2-m>0.1823</x2-m>
			<y2-m>-2.5244</y2-m>
			<z2-m>1.1020</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron-link-wire-port</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<center>
			<x-m>0.5658</x-m>
			<y-m>3.4198</y-m>
			<z-m>1.0164</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron_wire_top_P</object-name>
		<property>controls/flight/aileron</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-16.5</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>17.0</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>0.2424</x-m>
			<y-m>-3.4172</y-m>
			<z-m>1.1996</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron-lower-stbd</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<axis>
			<x1-m>0.6699</x1-m>
			<y1-m>4.2123</y1-m>
			<z1-m>-0.1679</z1-m>
			<x2-m>0.6699</x2-m>
			<y2-m>2.4838</y2-m>
			<z2-m>-0.3015</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>control-wire-aileron-S</object-name>
		<property>controls/flight/aileron</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-20</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>18.75</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>0.6712</x-m>
			<y-m>3.4250</y-m>
			<z-m>-0.3518</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>aileron-lower-port</object-name>
		<property>controls/flight/aileron</property>
		<factor>20.0</factor>
		<axis>
			<x1-m>0.6699</x1-m>
			<y1-m>-4.2123</y1-m>
			<z1-m>-0.1679</z1-m>
			<x2-m>0.6699</x2-m>
			<y2-m>-2.4838</y2-m>
			<z2-m>-0.3015</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>control-wire-aileron-P</object-name>
		<property>controls/flight/aileron</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-20</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>18.75</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>0.6712</x-m>
			<y-m>-3.4250</y-m>
			<z-m>-0.3518</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

	<!--  *** elevator *** -->

	<animation>
		<type>rotate</type>
		<object-name>elevator</object-name>
		<property>controls/flight/elevator</property>
		<!--		<factor>20.0</factor>-->
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-16.5</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>13.5</dep>
			</entry>
		</interpolation>
		<axis>
			<x1-m>3.9735</x1-m>
			<y1-m>-1.1881</y1-m>
			<z1-m>0.1617</z1-m>
			<x2-m>3.9735</x2-m>
			<y2-m>1.1881</y2-m>
			<z2-m>0.1617</z2-m>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>elevator-control-wire-lower</object-name>
		<property>controls/flight/elevator</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-16.5</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>13.5</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>3.9733</x-m>
			<y-m>-0.4104</y-m>
			<z-m>0.0516</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>elevator-control-wire-upper</object-name>
		<property>controls/flight/elevator</property>
		<interpolation>
			<entry>
				<ind>-1</ind>
				<dep>-16.5</dep>
			</entry>
			<entry>
				<ind>0</ind>
				<dep>0</dep>
			</entry>
			<entry>
				<ind>1</ind>
				<dep>13.5</dep>
			</entry>
		</interpolation>
		<center>
			<x-m>3.9733</x-m>
			<y-m>-0.4104</y-m>
			<z-m>0.2762</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>-1</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>rudder_bar</object-name>
		<property>controls/flight/rudder</property>
		<factor>15</factor>
		<center>
			<x-m>-0.343805</x-m>
			<y-m>0</y-m>
			<z-m>-0.36683</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>rudder_bar</object-name>
		<property>controls/flight/rudder</property>
		<factor>15</factor>
		<center>
			<x-m>-0.343805</x-m>
			<y-m>0</y-m>
			<z-m>-0.36683</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>

  <animation>
		<type>select</type>
		<object-name>chocks</object-name>
		<condition>
			<property>controls/gear/brake-parking</property>
			<property>gear/gear/wow</property>
			<property>gear/gear[1]/wow</property>
		</condition>
	</animation>
	
	<animation>
		<type>rotate</type>
		<object-name>wheel-assmbly-port</object-name>
		<offset-deg>3</offset-deg>
		<center>
			<x-m>-0.2732</x-m>
			<y-m>-0.2026</y-m>
			<z-m>-0.2451</z-m>
		</center>
		<axis>
			<x>-1</x>
			<y>0</y>
			<z>0</z>
		</axis>
	</animation>

	<animation>
		<type>rotate</type>
		<object-name>wheel-assmbly-stbd</object-name>
		<offset-deg>3</offset-deg>
		<center>
			<x-m>-0.2732</x-m>
			<y-m>0.2026</y-m>
			<z-m>-0.2451</z-m>
		</center>
		<axis>
			<x>1</x>
			<y>0</y>
			<z>0</z>
		</axis>
	</animation>

	<!-- *** LoD for the whole model *** -->
	<animation>
		<type>range</type>
		<min-m>0</min-m>
		<max-m>10000</max-m>
	</animation>

	<!-- animation>
		<type>select</type>
		<object-name>screw-heads</object-name>
		<object-name>gun-mounting</object-name>
		<object-name>hand-pump</object-name>
		<object-name>rigging-wires</object-name>
		<object-name>screw-heads-brass</object-name>
		<condition>
			<property>sim/model/camel/extra-details</property>
		</condition>
	</animation -->

	<animation>
		<type>select</type>
		<object-name>pilot</object-name>
		<condition>
			<property>sim/model/camel/show-pilot</property>
		</condition>
	</animation>

	<!-- animation>
		<type>select</type>
		<object-name>construction</object-name>
	</animation -->

 		    <!-- Nasal code -->
	<nasal>
	  

		<load>
			<![CDATA[
			print("Loading Sopwith Camel ", cmdarg().getPath());

#makes the propellors spin in the AI version of the aircraft
nodeName=cmdarg().getPath();
setprop (nodeName ~ "/engines/engine/rpm", "3000");
			
			

############################################
#SOPWITH CAMEL INITIALIZER
			var object_init = func() {
				# Datas of this object are under: cmdarg().getPath()
				var thisNodeName = cmdarg().getPath();
				var thisNode = props.globals.getNode(thisNodeName);
				# Add some special Sopwith Camel nodes

        setprop( ""~thisNodeName~"/sim/model/camel/show-pennants-flight-commander", (rand() > 0.8)); #show pennants only on some aircraft 
        setprop( ""~thisNodeName~"controls/gear/brake-parking", 0); #get rid of those annoying wheel chocks--linked to the parking brake trigger.

                
				
        ########################################################################
        ########################################################################
        # INITIALIZE BOMBABLE
        # 
        # Initialize constants and main routines for maintaining altitude
        # relative to ground-level, relocating after file/reset, and 
        # creating bombable/shootable objects.
        # 
        # These routines are found in FG/nasal/bombable.nas
        #  
        ########################################################################               
        # INITIALIZE BOMBABLE Object
        # This object will be slurped in the object's node as a child
        # node named "bombable".                 
        # All distances are specified in meters.
        # All altitudes are relative to current ground level at the object's 
        # location
        # 
         
        thisNodeName = cmdarg().getPath(); 

        var bombableObject = {  
          
          
          objectNodeName : thisNodeName,
          objectNode : props.globals.getNode(thisNodeName),
          updateTime_s : 1/3, #time, in seconds, between the updates that 
          #keep the object at its AGL. Tradeoff is high-speed updates look more
          #realistic but slow down the framerate/cause jerkiness.  Faster-moving
          #objects will need more frequent updates to look realistic.

		                        
          #########################################                              
          # ALTITUDE DEFINITIONS
          # 
          # All altitudes are in meters                    
          #         
          altitudes : {	
            wheelsOnGroundAGL_m : 1 , #altitude correction to add to your aircraft or ship that is needed to put wheels on ground (or, for a ship, make it float in the water at the correct level).  For most objects this is 0 but some models need a small correction to place them exactly at ground level
            
            minimumAGL_m : 33, #minimum altitude above ground level this object is allowed to fly
            maximumAGL_m : 5000, #maximum altitude AGL this object is allowed to fly, ie, operational ceiling	    
            crashedAGL_m : -0.85, #altitude AGL when crashed.  Ships will sink to this level, aircraft or vehicles will sink into the ground as landing gear collapses or tires deflate. Should be negative, even just -0.001.
          },
          #  
          #########################################
          # VELOCITIES DEFINITIONS
          # 
          velocities : {               
            maxSpeedReduce_percent : 0.5, #max % to reduce speed, per step, when damaged
            minSpeed_kt : 48, #minimum speed to reduce to when damaged.  Ground vehicles and ships might stop completely when damaged but aircraft will need a minimum speed so they keep moving until they hit the ground.
    
            damagedAltitudeChangeMaxRate_meterspersecond : 6.5, #max rate to sink or fly downwards when damaged, in meters/second
          },
          #  
          #########################################
          # EVASION DEFINITIONS
          # 
          # The evasion system makes the AI aircraft dodge when they come under
          # fire. 
          evasions : {               
            dodgeDelayMax_sec : 15, #max time to delay/wait between dodges
            dodgeDelayMin_sec : 5, #minimum time to delay/wait between dodges
            dodgeMax_deg : 60, #Max amount to turn when dodging
                              #90 degrees = instant turn, unrealistic
                              #up to 80 is usually OK, somewhere in 80-85 starts to be unrealistically fast
                              #>85 is usually very unrealistic.  You must test this in your scenario, however.
            
            dodgeMin_deg : 45, #minimum amount to turn when dodging
            dodgeROverLPreference_percent : 90, # Preference for right turns vs. left when dodging.  90% means 90% right turns, 50% means 50% right turns.
            dodgeAltMin_m : -400, #Aircraft will begin to move up or down 
            dodgeAltMax_m : 145, #Max & Min are relative to current alt 
            dodgeVertSpeedClimb_mps : 11.9, #Max speed to climb when evading
            dodgeVertSpeedDive_mps : 60, #Max speed to dive when evading 
          },
          #  
          #########################################
          # ATTACK DEFINITIONS
          # 
          # The attack system makes the AI aircraft turn and fly towards 
          # other aircraft 
          attacks : {               
            maxDistance_m : 5000, #max distance to turn & attack main aircraft
            minDistance_m : 200, #min distance to turn & attack main aircraft, ie, fly away this far before turning to attack again
            continueAttackAngle_deg : 75, #when within minDistance_m, the aircraft will continue to turn towards the main aircraft and attack *if* if the angle is less than this amount from dead ahead
            altitudeHigherCutoff_m : 5000, # will attack the main aircraft unless this amount higher than it or more
            altitudeLowerCutoff_m : 700, # will attack the main aircraft unless this amount lower than it or more 
            rollMin_deg : 45, #when turning on attack, roll to this angle min
            rollMax_deg : 58, #when turning on attack, roll to this angle max
                              #90 degrees = instant turn, unrealistic
                              #up to 80 is usually OK, somewhere in 80-85 starts to be unrealistically fast
                              #>85 is usually very unrealistic.  You must test this in your scenario, however.
            
            climbPower : 1250, # How powerful the aircraft is when climbing during an attack; 4000 would be typical for, say a Zero--scale accordingly for others; higher is stronger
            divePower : 4000, # How powerful the aircraft is when diving during and attack; 6000 typical of a Zero--could be much more than climbPower if the aircraft is a weak climber but a strong diver 
            attackCheckTime_sec : 10, # check for need to attack/correct course this often  
            attackCheckTimeEngaged_sec : 1.25, # once engaged with enemy, check/update course this frequently                 
          },
          #  
          #########################################
          # WEAPONS DEFINITIONS
          # 
          # The weapons system makes the AI aircraft fire on the main aircraft 
          # You can define any number of weapons--just enclose each in curly brackets
          # and separate with commas (,).           
          weapons : {
             front_gun :  #internal name - this can be any name you want; must be a valid nasal variable name
              {               
                name : "7.7mm Vickers Machine Gun", # name presented to users, ie in on-screen messages
                maxDamage_percent : 5, # maximum percentage damage one hit from the aircraft's main weapon/machine guns will do to an opponent
                maxDamageDistance_m : 500, # maximum distance at which the aircrafts main weapon/maching guns will be able to damage an opponent
                weaponAngle_deg  :  { heading: 0, elevation: 0 }, # direction the aircraft's main weapon is aimed.   
                                                                  # 0,0 = straight ahead, 90,0=directly right, 0,90=directly up, 0,180=directly back, etc.
                weaponOffset_m : {x:2, y:0, z:0}, # Offset of the weapon from the main aircraft center
              },    
          },  
          
          #  
          #########################################
          # DIMENSION DEFINITIONS
          #
          # All dimensions are in meters          
          #           
          dimensions : {                  
            width_m : 8.53,  #width of your object, ie, for aircraft, wingspan
            length_m : 5.71, #length of your object, ie, for aircraft, distance nose to tail
            height_m :2.59, #height of your object, ie, for aircraft ground to highest point when sitting on runway
            damageRadius_m : 4.265, #typically 1/2 the longest dimension of the object. Hits within this distance of the 
                                #center of object have some possibility of damage
            vitalDamageRadius_m : .9, #typically the radius of the fuselage or cockpit or other most 
                                     # vital area at the center of the object.  Always smaller than damageRadius_m 
          },
          #
          #########################################
          # VULNERABILITIES DEFINITIONS        
          #
          vulnerabilities : {                   
            damageVulnerability : 100, #Vulnerability to damage from armament, 1=normal M1 tank; higher to make objects easier to kill and lower to make them more difficult.  This is a multiplier, so 5 means 5X easier to kill than an M1, 1/5 means 5X harder to kill. 
            
            engineDamageVulnerability_percent : 3, #Chance that a small-caliber machine-gun round will damage the engine.       
            
            fireVulnerability_percent : 13, #Vulnerability to catching on fire. 100% means even the slightest impact will set it on fire; 20% means quite difficult to set on fire; 0% means set on fire only when completely damaged; -1% means never set on fire.                          
            
            fireDamageRate_percentpersecond : 0.2, #Amount of damage to add, per second, when on fire.  100%=completely damaged.
            
            fireExtinguishMaxTime_seconds : 100, #Once a fire starts, for this many seconds there is a chance to put out the fire; fires lasting longer than this won't be put out until the object burns out.
            
            fireExtinguishSuccess_percentage : 10, #Chance of the crew putting out the fire within the MaxTime above.
            
            explosiveMass_kg : 735 , #mass of the object in KG, but give at least a 2-10X bonus to anything carrying flammables or high explosives.
          },
          #
          #########################################
          # LIVERY DEFINITIONS
          #
          # Path to livery files to use at different damage levels.
          # Path is relative to the AI aircraft's directory.
          # The object will start with the first livery listed and 
          # change to succeeding liveries as the damage
          # level increases. The final livery should indicate full damage/
          # object destroyed.        
          # 
          # If you don't want to specify any special liveries simply set 
          # damageLivery : nil and the object's normal livery will be used.  
          #                                                            
          damageLiveries : {
            damageLivery : [  ]                        
          },
                            
        };

        #########################################
        # INITIALIZE ROUTINES
        # 
        # OVERALL INITIALIZER: Needed to make all the others work
        bombable.initialize ( bombableObject );
        #
        # LOCATION: Relocate object to maintain its position after file/reset       
        # (best not used for airplanes)
        # bombable.location_init ( thisNodeName );
        #
        # GROUND: Keep object at altitude relative to ground level
        bombable.ground_init ( thisNodeName );
        #
        # ATTACK: Make the object attack the main aircraft        
        bombable.attack_init ( thisNodeName );
        #
        # WEAPONS: Make the object shoot the main aircraft        
        bombable.weapons_init ( thisNodeName );
        #
        # BOMBABLE: Make the object bombable/damageable        
        bombable.bombable_init ( thisNodeName );
        #
        # SMOKE/CONTRAIL: Start a flare, contrail, smoke trail, or exhaust 
        # trail for the object.
        # Smoke types available: flare, jetcontrail, pistonexhaust, smoketrail,
        # damagedengine                        
        bombable.startSmoke("pistonexhaust", thisNodeName );
        #
        # END INITIALIZE BOMBABLE
        ########################################################################
        ########################################################################                
	      

        
			}
			
			object_init();
			]]>
		</load>
		<unload>
			<![CDATA[
			print("Unload Sopwith Camel ", cmdarg().getPath());


      ########################################################################
      ########################################################################                
			# BOMBABLE DESTRUCTORS      			
			# 			
      var nodeName= cmdarg().getPath();  
      bombable.initialize_del( nodeName );
      bombable.ground_del( nodeName );
      bombable.location_del (nodeName);
      bombable.bombable_del( nodeName );
      bombable.attack_del( nodeName );
      bombable.weapons_del (nodeName);
      #
	    ########################################################################
      ########################################################################                
      
    

			]]>
		</unload>
 </nasal>  

</PropertyList>
