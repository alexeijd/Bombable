<?xml version="1.0" encoding="UTF-8"?>

<PropertyList>

	<path>Models/m1.ac</path>
	
	<description>Tank M1 Abrams. This tank is designed to be a static
	air-to-ground target. You can damage it with heavy gun or bombs.
	If the tank is really damaged you will see fire and smoke.
	The more you damage it, the more it turn to black.
	TODO: _ add MultiPlayer mode, in order to share scenario with multiple tanks and aircrafts.</description>
	<author>Emmanuel BARANGER - David BASTIEN</author>
	<status>beta</status>
	
	<!-- animations -->
	
	<animation>
		<name>M1-corps</name>
		<object-name>corps</object-name>
		<object-name>tourelle</object-name>
		<object-name>canon</object-name>
	</animation>
	
	<animation>
		<type>material</type>
		<object-name>M1-corps</object-name>
		<texture-prop>effects/texture-corps-path</texture-prop>
		<transparency>
			<alpha>1.0</alpha>
		</transparency>
	</animation>
	
	<animation>
		<type>rotate</type>
		<object-name>tourelle</object-name>
		<object-name>canon</object-name>
		<property>surface-positions/turret-pos-deg</property>
		<interpolation>
			<entry><ind>-150</ind><dep>-150</dep></entry><!-- right -->
			<entry><ind>150</ind><dep>150</dep></entry><!-- left -->
		</interpolation>
		<center>
			<x-m>0.696</x-m>
			<y-m>0.0</y-m>
			<z-m>-0.799</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>0</y>
			<z>1</z>
		</axis>
	</animation>
	
	<animation>
		<type>rotate</type>
		<object-name>canon</object-name>
		<property>surface-positions/cannon-elev-deg</property>
		<interpolation>
			<entry><ind>-10</ind><dep>-10</dep></entry>
			<entry><ind>30</ind><dep>30</dep></entry>
		</interpolation>
		<center>
			<x-m>-0.967</x-m>
			<y-m>0.0</y-m>
			<z-m>0.656</z-m>
		</center>
		<axis>
			<x>0</x>
			<y>1</y>
			<z>0</z>
		</axis>
	</animation>
	
	<!-- fire animations -->
	<model>
		<path>AI/Aircraft/M1-Abrams-Bombable/Models/Effects/fire-particles.xml</path>
		<offsets>
			<x-m>0.0</x-m>
			<y-m>0.0</y-m>
			<z-m>1.2</z-m>
			<roll-deg>0.0</roll-deg>
			<pitch-deg>0.0</pitch-deg>
			<heading-deg>0.0</heading-deg>
		</offsets>
	</model>
	
	<animation>
		<type>range</type>
		<min-m>0</min-m>
		<max-m>10000</max-m>
	</animation>
	
	<!-- Nasal code -->
	<nasal>
		<load>
			<![CDATA[
			print("Loading tank ", cmdarg().getPath());
			var loopid = 0;
			
			var m1_main_loop = func(id, myTankNodeName) {
				id == loopid or return;
				if(getprop(""~myTankNodeName~"/effects/general-fire/trigger")) 
					update_fire_params(myTankNodeName);
				settimer(func { m1_main_loop(id, myTankNodeName); }, 0.8);
			}
			
			var m1_test_impact = func(myTankNodeName) {
				var tankNode = props.globals.getNode(myTankNodeName);
				var impactNodeName = props.globals.getNode("ai/models/model-impact").getValue();
				var impactNode = props.globals.getNode(impactNodeName);
				var impactTerrain = impactNode.getNode("impact/type").getValue();
				var ballisticMass = impactNode.getNode("mass-slug").getValue() * 32.174049; #in lbs
				# update tank position
				var tankGeoCoord = geo.Coord.new();
				tankGeoCoord.set_latlon(tankNode.getNode("position/latitude-deg").getValue(), tankNode.getNode("position/longitude-deg").getValue(), (tankNode.getNode("position/altitude-ft").getValue()*0.3048));
				var impactGeoCoord = geo.Coord.new();
				impactGeoCoord.set_latlon(impactNode.getNode("impact/latitude-deg").getValue(), impactNode.getNode("impact/longitude-deg").getValue(), impactNode.getNode("impact/elevation-m").getValue());
				var impactDistance = tankGeoCoord.direct_distance_to(impactGeoCoord);
				
				if((impactDistance <= 4.0) and (impactTerrain != "terrain")) {
					# case of a direct impact, TODO: damage depend on mass and speed of the ballistic
					if(ballisticMass < 0.8) {
						# light bullet
						add_damage(0.05, myTankNodeName);
					} elsif((ballisticMass >= 0.8) and  (ballisticMass < 1.2)) {
						# such be a big gun, like the GAU-8 gatling gun.
						add_damage(0.8, myTankNodeName);
					} else {
						# tank is surely dead
						add_damage(1.0, myTankNodeName);
					}
				} else {
					# check submodel blast effect distance.
					if((ballisticMass >= 200) and (ballisticMass < 350)) {
						# Mk-81 class
						if(impactDistance <= 10)
							add_damage(1.0, myTankNodeName);
						elsif((impactDistance > 10) and (impactDistance < 30))
							add_damage(0.2, myTankNodeName);
					} elsif((ballisticMass >= 350) and (ballisticMass < 750)) {
						# Mk-82 class
						if(impactDistance <= 33)
							add_damage(1.0, myTankNodeName);
						elsif((impactDistance > 33) and (impactDistance < 50))
							add_damage(0.25, myTankNodeName);
					} elsif(ballisticMass >= 750) {
						# Mk-83 class and upper
						if(impactDistance <= 70)
							add_damage(1.0, myTankNodeName);
						elsif((impactDistance > 70) and (impactDistance < 200))
							add_damage(0.25, myTankNodeName);
					}
				}
			}
			
			var add_damage = func(damageRise, myTankNodeName) {
				# update effects/damage: 0.0 mean no damage, 1.0 mean full damage
				var damageValue = getprop(""~myTankNodeName~"/effects/damage");
				if(damageValue < 1.0) {
					damageValue += damageRise;
					if(damageValue > 1.0)
						damageValue = 1.0;
					elsif(damageValue < 0.0)
						damageValue = 0.0;
					setprop(""~myTankNodeName~"/effects/damage", damageValue);
					# start fire if there is enough damages.
					if((damageValue >= 0.75) and !getprop(""~myTankNodeName~"/effects/general-fire/trigger"))
						setprop(""~myTankNodeName~"/effects/general-fire/trigger", 1);
					# Change livery according to the damage level
					if((damageValue >= 0.15) and (damageValue < 1.0))
						setprop(""~myTankNodeName~"/effects/texture-corps-path", "Models/camo2.png");
					elsif(damageValue == 1.0) {
						setprop(""~myTankNodeName~"/effects/texture-corps-path" ,"Models/camo3.png");
						# Stop fire and smoke after 30 minutes.
						settimer(func { setprop(""~myTankNodeName~"/effects/general-fire/trigger", 0); }, 1800);
					}
				}
			}
			
			var update_fire_params = func(myTankNodeName) {
				# random end smoke size, between 50 and 150.
				var smokeEndsize = rand();
				smokeEndsize = smokeEndsize*100;
				smokeEndsize += 50;
				setprop(""~myTankNodeName~"/effects/general-fire/smoke-endsize", smokeEndsize);
				# The tank is burning, so we regulary add damage.
				add_damage(0.005, myTankNodeName);
			}
			
			var m1_init = func() {
				# Datas of this tank are under: cmdarg().getPath()
				var tankNodeName = cmdarg().getPath();
				var tankNode = props.globals.getNode(tankNodeName);
				# Add some useful nodes
				tankNode.getNode("effects/texture-corps-path", 1).setValue("Models/camo.png");
				tankNode.getNode("effects/general-fire/smoke-endsize", 1).setDoubleValue(50.0);
				tankNode.getNode("effects/general-fire/trigger", 1).setBoolValue(0);
				tankNode.getNode("effects/damage", 1).setDoubleValue(0.0);
				tankNode.getNode("surface-positions/cannon-elev-deg", 1).setDoubleValue(0.0);
				tankNode.getNode("surface-positions/turret-pos-deg", 1).setDoubleValue(0.0);
				
				setlistener("ai/models/model-impact", func { m1_test_impact(tankNodeName); });
				loopid += 1;
				#print("Tank loaded.");
				settimer(func { m1_main_loop(loopid, tankNodeName); }, 5.0);
			}
			
			m1_init();
			]]>
		</load>
		<unload>
			<![CDATA[
			print("Unload tank.");
			loopid += 1;
			]]>
		</unload>
	</nasal>

</PropertyList>

